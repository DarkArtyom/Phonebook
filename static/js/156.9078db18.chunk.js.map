{"version":3,"file":"static/js/156.9078db18.chunk.js","mappings":"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","sources":["components/ContactsList/ContactListItem/ContactsList.styled.js","components/ContactsList/ContactListItem/ContactListItem.jsx","redux/selectors.js","components/ContactsList/ContactsList.jsx","components/FormContacts/Form.jsx","styles/Container.styled.js","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","pages/ContactsPage.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  margin-top: 20px;\n  width: 600px;\n`;\n\nexport const Item = styled.li`\n  display: flex;\n  align-items: center;\n  margin-bottom: 10px;\n`;\n\nexport const BtnDelete = styled.button`\n  display: block;\n  outline: none;\n  border: none;\n  min-width: 50px;\n  height: 30px;\n  border-radius: 5px;\n  cursor: pointer;\n  background-color: orange;\n  margin-left: 10px;\n  &:hover {\n    background-color: red;\n    transition: 250;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { Item, BtnDelete } from './ContactsList.styled';\nimport { deleteContact } from 'redux/contacts/operations';\n\nexport const ContactsListItem = ({ visible }) => {\n  const dispatch = useDispatch();\n\n  return (\n    <Item>\n      {visible.name}: {visible.number}\n      <BtnDelete\n        type=\"button\"\n        onClick={() => dispatch(deleteContact(visible.id))}\n      >\n        Delete\n      </BtnDelete>\n    </Item>\n  );\n};\n\nContactsListItem.propTypes = {\n  visible: PropTypes.object.isRequired,\n};\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\n\nexport const selectFilteredContacts = state => state.filter;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectFilteredContacts],\n  (contacts, filteredContacts) => {\n    const normalazedFilter = filteredContacts.toLowerCase();\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalazedFilter)\n    );\n  }\n);\n","import { ContactsListItem } from './ContactListItem/ContactListItem';\nimport { List } from './ContactListItem/ContactsList.styled';\nimport { useSelector } from 'react-redux';\nimport { selectVisibleContacts } from 'redux/selectors';\n\nexport const ContactsList = () => {\n  const contacts = useSelector(selectVisibleContacts);\n\n  return (\n    <List>\n      {contacts.map(contact => (\n        <ContactsListItem key={contact.id} visible={contact} />\n      ))}\n    </List>\n  );\n};\n","import { Forma, Label, Input, ButtonSubmit, FormWrap } from './Form.styled';\nimport { nanoid } from 'nanoid';\nimport { useDispatch } from 'react-redux';\nimport { addContacts } from 'redux/contacts/operations';\n\nexport const Form = () => {\n  const dispatch = useDispatch();\n  const handleSubmit = event => {\n    event.preventDefault();\n    const form = event.target;\n    const user = {\n      id: nanoid(),\n      name: form.elements.name.value,\n      number: form.elements.number.value,\n    };\n\n    dispatch(addContacts(user));\n    form.reset();\n  };\n\n  const loginInputId = nanoid();\n  const loginInputNumberId = nanoid();\n\n  return (\n    <FormWrap>\n      <Forma onSubmit={handleSubmit}>\n        <Label htmlFor={loginInputId}>Full name</Label>\n        <Input\n          id={loginInputId}\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"enter name\"\n          // value={name}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          // onChange={handleInput}\n          required\n        />\n        <Label htmlFor={loginInputNumberId}>Phone number</Label>\n        <Input\n          id={loginInputNumberId}\n          type=\"tel\"\n          name=\"number\"\n          // value={number}\n          placeholder=\"enter number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          // onChange={handleInput}\n          required\n        />\n        <ButtonSubmit type=\"submit\">Add contact</ButtonSubmit>\n      </Forma>\n    </FormWrap>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  margin: 0 auto;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n`;\n","import styled from 'styled-components';\nexport const LabelSearch = styled.label`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  margin-top: 5px;\n`;\n\nexport const InputSearch = styled.input`\n  border: none;\n  border-radius: 5px;\n  background-color: lightblue;\n  margin-top: 10px;\n  padding-left: 10px;\n  height: 30px;\n`;\n","import { LabelSearch, InputSearch } from './Filter.styled.js';\nimport { useDispatch } from 'react-redux';\nimport { filterContacts } from 'redux/filterContacts/filterSlice.js';\n\nexport const Filter = ({ value }) => {\n  const dispatch = useDispatch();\n\n  return (\n    <LabelSearch>\n      Find contact by name\n      <InputSearch\n        type=\"text\"\n        name=\"search\"\n        placeholder=\"enter for search\"\n        value={value}\n        onChange={e => dispatch(filterContacts(e.target.value))}\n      />\n    </LabelSearch>\n  );\n};\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Helmet } from 'react-helmet';\nimport { ContactsList } from 'components/ContactsList/ContactsList';\nimport { Form } from 'components/FormContacts/Form';\nimport { fetchContacts } from 'redux/contacts/operations';\n\nimport { Container } from 'styles/Container.styled';\nimport { Filter } from 'components/Filter/Filter';\nimport { selectError, selectIsLoading, selectContacts } from 'redux/selectors';\n\nexport default function ContactsPage() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const contacts = useSelector(selectContacts);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <Container>\n      <Helmet>\n        <h1>Phonebook</h1>\n      </Helmet>\n      <Form />\n      {isLoading && !error && <b>Request in progress...</b>}\n      <h2>Contacts</h2>\n      {contacts.length > 0 && <Filter />}\n      {contacts.length > 0 && <ContactsList />}\n    </Container>\n  );\n}\n"],"names":["List","styled","Item","BtnDelete","ContactsListItem","visible","dispatch","useDispatch","name","number","type","onClick","deleteContact","id","selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","error","selectVisibleContacts","createSelector","filter","filteredContacts","normalazedFilter","toLowerCase","contact","includes","ContactsList","useSelector","map","Form","loginInputId","nanoid","loginInputNumberId","onSubmit","event","preventDefault","form","target","user","elements","value","addContacts","reset","htmlFor","placeholder","pattern","title","required","Container","LabelSearch","InputSearch","Filter","onChange","e","filterContacts","ContactsPage","useEffect","fetchContacts","Helmet","length"],"sourceRoot":""}